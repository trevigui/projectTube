/* ******************************** UNIVERSAL MODIFICATIONS *************************************** */

/* You can review the different paddings and margins overall from the Firefox Inspector. Filter icon + Little dotter square icon on asterisk */

*{
    color: white;
    font-family: 'Roboto', sans-serif;
    box-sizing: border-box;             /* Adapting content to viewport borders */
    margin: 0;                          /* Always always always add this parameter to the universal selector in order not to see margins around the body and header by default. */
    padding: 0;
    height: auto;

    scroll-behavior: smooth;            /* This makes clicking anchors (such as back to top) smoother-looking */
}

a:link {
    text-decoration: none;              /* Saying goodbye forever to that pesky link underline */
}

body {
    background-color: #0f0f0f ;
}

main {
    display: flex;                      /* To push the main next to the aside. */
}

h2 {
    font-size : 14px;

    margin: 0;
    padding : 0;

    padding-left: 0.6em;
    margin-bottom: 0.5em;
}

/* **************************************** SIDEBAR ********************************************** */
/* **************************************** SIDEBAR ********************************************** */

.burgerLabel {
    border: hidden;
    border-radius: 50%;
    padding: 3%;
    cursor: pointer;
}

/* *************************************** FULL SIDEBAR **************************************** */

.burgerButton {
    border: 1px solid #ffffff2a hidden;
    border-radius:50%;
    padding: 1em;

    z-index:99;                 /* Just in case, there might be a way to completely avoit putting the burger button fully on top */
}

.burgerButton:hover  {
    background-color:rgba(255, 255, 255, 0.089);
}

.burgerButton:active  {
    transition: 0.3s ease-in-out;    /* Replicating that light border blink on click */
    outline: solid rgba(255, 255, 255, 0.344) 1px;
}

.fullTop {
    display: flex;

    align-items: center;
    justify-content: space-between;

    margin:0 1.5em 0 1.5em;
}

#fullSidebar {
    display: block;
    position: absolute;           /* Positioning the full bar on top of the compact one, just in case the compact one doesn't disappear */
    z-index: 20;
    top: 4.5em;
    padding-bottom:5.7em;       /*As I am moving a full height element, I need to offset it with a padding so I can see the entirety of the sidebar's content when I scroll down. */
    left:0;

    width:25em;

    background-color:#0f0f0f;
    padding-right:1em;
    padding-top:1em;
    height: 100%;
    margin: 0 auto;

    /* *************CUSTOM SCROLLBAR ************** */

    overflow-y: hidden;             /*This hides the scrollbar until I hover over it */
    scrollbar-color: #717171 transparent;
    scrollbar-width: thin;
    scrollbar-gutter: stable;       /*This allow me to preallocate space for the scrollbar gutters and prevent nasty word-wrapping on hover. Another method would have been to make the scrollbar transparent by default and coloring it when hovered */
}

.blackVeil {                /* Black div that spawns upon burger menu activaion */
    display: none;
    position: relative;
    bottom: 5em;

    background-color:#0000006c ;
    width:100vmax;
    height:100vmax;

    animation: fadeIn 1s ease-in-out;           /* It is impossible to use translateX with the display:none display:block mechanic siultaneously ðŸ˜¢. That's the next best thing. */
}

.buttonList {
    border-top: solid 0.1em #3f3f3f;

    padding-bottom: 1em;

    padding-top: 1em;               /* Padding rather than margin in order to put space between the content and the top border. */
    padding-left: 1em;              /* Padding rather than margin to keep the top border top flush with the leftmost part of the screen */
    padding-right: 1em;
}

.buttonTopList {
    /*Purposefully ridding ourselves of the top margin */
    padding-right: 1em;
    padding-bottom: 1em;
    padding-left: 1em;
}

.buttonWrapper {
    border: hidden;
    border-radius: 0.5em;
    padding : 0.7em 1.4em 0.7em 1.4em;
}

.buttonWrapper:hover {
    background-color: #272727;
}

.buttonWrapper:active {
    transition: 0.3s ease-in-out;    /* Replicating that light border blink on click */
    outline: solid rgba(255, 255, 255, 0.344) 1px;
}

.buttonWrapper a {
    /* text-decoration: none;   */
    display: flex;
    flex-direction: row;            /* Aligning the button description to the right of the icon */
    align-items: center;
}

.buttonWrapper a p {
    margin-left: 1.5em;
    font-size: 14px;
    white-space: nowrap;             /* white-space:nowrap disables wrapping so that the button's text stay on the one line */

    overflow: hidden;               /* Then, in order to show overflow ellipses, we first need to hide said overflow inside the box... */
    text-overflow: ellipsis;        /* ... Then specify how we want the text overflow to be handled. */
}

.buttonWrapper a img {
    width: 2.3em;
}

.filtered {
    filter: invert();                 /*To invert black png icons and make them white */
}

.loginSectionWrapper {
    border-top: solid 0.1em #3f3f3f;

    padding-bottom: 1em;
    padding-top: 2em;               
    padding-left: 3em;
    padding-right: 5em;
}

.loginBlurb {
    line-height: 20px;
    padding-bottom: 1em;
    font-size: 14px;
}

/* ********************************** COMPACT SIDEBAR ************************************* */

#sidebar {
    z-index:10;                 /* Not going to touch the position, only modifying the layering */

    width: 8em; 

    padding-top: 0.5em;             /* To align my burger button and faux-header with the actual header */
    font-size: 10px;
    background-color:#0f0f0f;

    position: fixed;                /* Making sure the sidebar stays put */
    left: 0;
    
    display: flex;                  /* To align the burger button */
    flex-direction:column;
}

#compactSidebar {
    display: none; /* FLEX */
    flex-direction: column;

    padding: 0.5em;

}

.compactButtonWrapper {
    border: hidden;
    border-radius: 0.5em;

    padding-top:1.8em;
    padding-bottom: 1.8em;          /* Space between buttons */

    text-align:center;
}


.compactButtonWrapper:hover {
    background-color: #272727;
}

.compactButtonWrapper:active {
    transition: 0.3s ease-in-out;    /* Replicating that light border blink on click */
    outline: solid rgba(255, 255, 255, 0.344) 1px;
}

/* ******************************************** SIDEBAR TRANSFORM ****************************************** */

#fullSidebar {
    transition: 0.2s;
    transform: translateX(-400px);

    height: 100vh;
}

#burger:checked ~ #compactSidebar {
    display: none;
}

#burger:checked ~ #fullSidebar {
    display: block;
    transform: translateX(0px);
}

#burger:checked ~ .blackVeil {
    display: block;
    transform: translateX(25em); 
}

#fullSidebar:hover {
    overflow-y: auto;               /*This shows the scrollbar on hover */
}


/* ************************************ HEADER **********************************************/


header {
    position: fixed;                /* Affixing the header's position on scroll...*/
    z-index: 10;                    /* Below the searchbar, on top of the ad banner */
    top: 0;                         /*... to the top-leftmost part of the page*/
    width: 100%;                    /*Making the header stick to the left and right borders of the page */

    display: flex;
    align-items: center;
    justify-content: space-between;
    background-color: #0f0f0f;

    padding-top: 0.5em;
    padding-bottom: 0.5em;
    padding-left: 2em;
    padding-right: 2em;
}

.headerSection {
    display: flex;
    align-items: center;
}

.headerSection1 {
    min-width: 185px;                 /*Padding out the right of the header for a centered search bar */
}

.headersection2 {
    display: flex;
    align-items: center;            /*Aligning the prompt with the search button */
}



/*------------------------------------*/

.logoSection  {                 
    margin-left: 2em;
    display: flex;
    align-items: center;
}

.logoSection .logo  {                 
    width: 6em;
}

.logoSection p {                 /* Modifying "FR" paragraph after the logo */
    margin-top: 0;                  /* Nullifying the default top margin for <p> */      
    margin-bottom: 2em;             /* Enforcing a bigger-than-default bottom margin for <p> */
    font-size: 10px;
    color: #aaaaaa;
}

.logoSection a h1 {
    line-height: 0;                 /* This removes the unoccupied space of the h1 line that normally appears below the logo */
}

.burgerImage {
    width: 2.5em;
    line-height: 0;
    vertical-align: middle;         /* Enables the burger logo to be centered vertically in the button div */
}

.fauxHeader {

    display: flex;
    justify-content: space-evenly;

    /*                                  AI CODE
        position: fixed;                Makes the faux header stay at the top when scrolling
        z-index: 999;                   Brings the faux header on top of other elements
    visibility: hidden;                 Hides the faux header until it is needed (when the user scrolls)
    opacity: 0;                         Also makes the faux header invisible until it is shown
    transition: all 0.5s ease-in-out    Smoothly transitions between visible and invisible states */
    
}

#searchBar {

    width:30vw;     

    background-color: #121212;
    font-size: 16px;
    font-weight: 400;
    height: 2.3em;
    border: solid #303030 0.1em;
    border-top-left-radius: 1.5em;
    border-bottom-left-radius: 1.5em;
    padding-left: 1em;

    /* min-width: 30vw; */

}

.searchContainer {
    display:none;
}

.searchButton {

    display: none;               /* FLEX */
    justify-content: center;                     /* Centering the logo inside the searchButton div. */

    background-color: #222222;
    height: 2.3em;
    width: 4em;         /* min-width could be used to prevent the search logo from being squished on zoom but it is broken of Firefox... */
    font-size: 16px;

    /* To make it look like the search bar and search button are fused together, I apply borders on the button everywhere except to the left of it. */
    border-top: solid #303030 0.1em;
    border-bottom: solid #303030 0.1em;
    border-right: solid #303030 0.1em;
    border-top-right-radius: 1.5em;
    border-bottom-right-radius: 1.5em;                  
}

#image {
    scale:0.6;                                   /* Using the width attribute would squish the image since the button and search bar have hard-coded heights*/ 
}

.searchButton2 {
    margin-right: 1em;
    line-height: 0;                              /* Removing superflous space used up by empty <a> thus removing slight misalignment of items */

    padding: 0.5em;
    border-radius: 50%;
    transition: 0.3s ease-in-out;  
}

.searchButton2:hover {
    background-color: rgba(158, 158, 158, 0.137);
}

.searchButton2:active {
    outline: solid rgba(255, 255, 255, 0.123) 1px;      /* Using an outline instead of a border prevents the micro-displacement of the header getting bigger because of the adder button border */
    background-color: rgba(255, 255, 255, 0.185);
}

#SearchImage2 {
    width: 1.6em;
}

.compactImage {
    width: 2.5em;
}

#kabobButton {

    display:none;

    margin-right: 1em;
    line-height: 0;                              /* Removing superflous space used up by empty <a> thus removing slight misalignment of items */

    padding: 0.5em;
    border-radius: 50%;
    transition: 0.3s ease-in-out;                /* Replicating that light border blink on click */
}

#kabobButton:active {
    outline: solid rgba(255, 255, 255, 0.123) 1px;      /* Using an outline instead of a border prevents the micro-displacement of the header getting bigger because of the adder button border */
    background-color: rgba(255, 255, 255, 0.123);
}

.miscImage {
    width: 1.6em;
}

#login1 {
    display:none;
}

#login2 {
    display:none;
    line-height:0;
}

.loginWrapper {
    border: 0.1em solid #303030;
    border-radius: 1.5em;

    min-width: 10em;                                    /* Hard-coding the width so the button won't change height with its contents wrapping */
    padding-top: 0.4em;
    padding-bottom: 0.4em;
    padding-left: 0.6em;
    padding-right: 0.6em;

    font-size: 13.5px;
    font-weight: bold;
}

.loginWrapper a {
    line-height: 0;                             /* This removes the unoccupied space of the a link below the log-in picture, thus fixing the alignment with the log-in text". */
 
    display: flex;                              /*Aligning loginWrapper's dual child divs together*/
    align-items: center;
    justify-content: center;
}

.loginWrapper a p {
    margin-left: 0.5em;
    color: #3ea6ff;
}

.loginWrapper:hover {
    background-color: #263850;
}

.loginWrapper:active {
    transition: 0.3s ease-in-out;    /* Replicating that light border blink on click */
    outline: solid rgba(255, 255, 255, 0.344) 1px;
}

            /* ************************** CUSTOM TOOLTIPS ********************************************************* */

            #kabobButton p, .searchButton2 p {
                display: none;
                background-color: #5f5e5fe3;
                color: white;
                padding: 15.5px;
                
                outline: hidden;
                border-radius: 0.3em;
                font-size: 12px;
            }

            #kabobButton:hover p, .searchButton2:hover p {                          /* Daily reminder that I don't have to append the :hover pseudo-element to the very end of my lines, I can choose the element I want to use hover on, then act on a different one. */
                display: block;
                position: absolute;
                

                animation: fadeIn 0.3s ease-in-out;
                margin-top: 1.8em;
            }

            .searchButton p {
                display: none;
                background-color: #5f5e5fe3;
                color: white;
                padding: 10px;
                font-size: 12px;
            }

            .searchButton:hover p {
                display: block;
                position: absolute;
                margin-top: 4.5em;
                border-radius: 0.3em;

                animation: fadeIn 0.3s ease-in-out;
            }

            .rightArrowButton p {
                display: none;
                background-color: #5f5e5fe3;
                color: white;
                padding: 10px;
                
                outline: hidden;
                border-radius: 0.3em;
                font-size: 12px;
            }

            .rightArrowButton:hover p {
                display: block;
                position: absolute;
                margin-top: 7em;
                border-radius: 0.3em;

                animation: fadeIn 0.3s ease-in-out;
            }

                @keyframes fadeIn {
                    from {opacity: 0;}
                    to {opacity: 1;}
                }

/* ********************************************************************* MAIN CONTENT **************************************************************************************** */

#mainContent {
    width: 100% ;
    margin-top: 3.6em;
}

.carousel {
    display: flex;
    align-items: center;

    margin-bottom: 0.5em;
    margin-left: 1.5em;
}

#mainContent .tagList {
    white-space: nowrap;
    overflow-x: scroll; 
    scrollbar-color: transparent;                       /* Keeping the sideways scroll but hiding the scroll bar aways */
    scrollbar-width: none;
    scrollbar-gutter: stable;     
}

.tagButton1 {
    background-color: white;
    border-radius: 0.6em;                              /* To avoid button curvature discrepancy when using lengthier buttons, avoid using percentage (as it is relative to the button's length and height) and avoid vw percentage (as it is relative to the viewport width).*/
    border: none 0.1em;

    padding: 0.6em 0.9em 0.6em 0.9em;
    font-weight:600;
}

.tagButton1 a{
    color: #272727;
}

.tagButton {
    background-color: #272727;
    border-radius: 0.75em;                              /* To avoid button curvature discrepancy when using lengthier buttons, avoid using percentage (as it is relative to the button's length and height) and avoid vw percentage (as it is relative to the viewport width).*/
    border: none 0.1em;

    padding: 0.7em;
    margin-left: 0.5em;
    font-weight:600;
}

.rightArrowButton {
    border: hidden;
    border-radius: 50%;

    display: flex;
    align-items:center;
    justify-content:center;
    padding: 0.5em;
    margin-left:1em;
}

.rightArrowButton:active {
    outline: solid rgba(255, 255, 255, 0.344) 1px;
    background-color: rgba(255, 255, 255, 0.123);
    transition: 0.3s ease-in-out;
}

/* *********************************************************************** AD BANNER ************************************************************************************ */

.belowBanner {
    position: relative;
    z-index: 7;
    height: calc(520px/2.3);                      /* Actual height of the banner divided by two */

    background-color: white;                  /* I set a white background on my div that will span my screen width regardless of the zoom. This creates a seamless effect and has the banner flush with the screen at all times. */
    display: flex;
    justify-content: flex-start;                /* ...then I flex-start my image amidst that color. */
    overflow-X:hidden;                          /* Now that everything is flush, I can his my overflowing background image inside the container */
}

.aboveBanner {
    position: absolute;
    z-index: 8;
    top: 9.5em;

    width: 430px;                             /* Arbitrary width to keep the paragraph within a small area. */

    padding-left:2em;                         /*Padding for the content */
}

.aboveBanner p {
    color: black;
    font-weight:bold;
    line-height:30px;
    font-size: 19px;
}

.closeButton { 
    margin-left: auto;                          /* This single line pulls a lot of weight. It allows me to exclude the button and put it at the right of my screen https://stackoverflow.com/questions/35269947/how-can-i-align-one-item-right-with-flexbox */

    position: absolute;                         /* Now I simply, position my button on the z-index and its behavior is still inherited from its flexbox parent. */
    z-index: 8;
    right:1em ;

    border: hidden;
    border-radius: 50%;
    background-color:rgb(112, 112, 112);
    padding:0.3em;
    width: min-content;                        /* "encompassed" the child image */
    height: min-content;                        /* "encompassed" the child image */
    margin-top: 0.8em;
    margin-right: 0.8em;
}

.closeImage {
    width: 1.5em;
    line-height: 0;
    vertical-align: middle;         /* Enables the burger logo to be centered vertically in the button div */
}

.premiumLogo {
    width:19em;
    margin-bottom:1em;
}

.subscribeWrapper {
    border: 0.1em solid #065fd4;
    border-radius: 1.5em;

    width: 5em;                                    /* Hard-coding the width so the button won't change height with its contents wrapping */
    padding: 0.2em 0.3em 0.2em 0.3em;

    margin-top: 1.5em;
}

.subscribeWrapper a {
    line-height: 0;                             /* This removes the unoccupied space of the a link below the log-in picture, thus fixing the alignment with the log-in text". */
 
    display: flex;                              /*Aligning loginWrapper's dual child divs together*/
    align-items: center;
    justify-content: center;
}

.subscribeWrapper a p {
    color: #065fd4;
    font-size: 13px;
}

.subscribeWrapper:hover {
    background-color: rgba(156, 156, 156, 0.205);
}

.gridContainer  {
    display: grid;
    /* Using minmax, setting a bigger min-width creates wiggle room for my pictures inside their container, which can help containers resize more often and create fewer humongous gaps. */
    grid-template-columns: repeat(auto-fit, minmax(calc(720px / 2), 1fr) ); /* Minimum is the width of my thumbnail picture, Maximum is 1fr ergo a comparatively full column */
    gap: 1em;
    justify-items: center;      /* This is specifically to center the grid horizontally !!! DO NOT DELETE*/
    /* justify-content: center; */
    margin-top: 1.5em;
    margin-bottom: 1.5em;
    /* grid-auto-flow: dense;  */
}

#bannerClosingOpportunity {
    display: block;
}

#close:checked ~ #bannerClosingOpportunity {
    display: none;
}

/* Example selector : ( .gridContainer > * {} ) The > is to focus on the selected item's children. You can add an asterisk after it to select all the children */ 

.gridItem {
    border: hidden;
    border-radius:0.75em;
    overflow: hidden;

    display: flex;
    flex-flow: column wrap;
    text-overflow: ellipsis;

    max-width:calc(720px/2);                /*  The width parameter only sets a minimal width. Using max-width, I can constrain the width of my video title.
                        
    margin-bottom: 2em;                         /* Adding any margin other than bottom is going to make the grid look uglier. */

    cursor: pointer;
}

.gridItem:active {
    transition: 0.3s ease-in-out;    /* Replicating that light border blink on click */
    outline: solid rgba(255, 255, 255, 0.344) 1px;
    background-color: rgb(49, 49, 49);
}

.thumbnail {

    width: calc(720px/2);
    height: calc(404px/2);

    border: hidden;
    border-radius: 0.75em;

    margin-bottom: 0.5em;
}

.thumbnail:hover {
    opacity: 90%;
    transition: opacity 0.3s;
}

.thumbnail1{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail1.png);
    background-size: contain;
}

.thumbnail2{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail2.png);
    background-size: contain;
}

.thumbnail3{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail3.png);
    background-size: contain;
}

.thumbnail4{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail4.png);
    background-size: contain;
}

.thumbnail5{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail5.png);
    background-size: contain;
}

.thumbnail6{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail6.png);
    background-size: contain;
}

.thumbnail7{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail7.png);
    background-size: contain;
}

.thumbnail8{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail8.png);
    background-size: contain;
}

.thumbnail9{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail9.png);
    background-size: contain;
}

.thumbnail10{
    background-image: no-repeat;
    background: url(/resources/main/videoThumbnail10.png);
    background-size: contain;
}



.thumbnail1:hover{
    background: url(/resources/main/videoThumbnail1.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail2:hover{
    background: url(/resources/main/videoThumbnail2.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail3:hover{
    background: url(/resources/main/videoThumbnail3.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail4:hover{
    background: url(/resources/main/videoThumbnail4.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail5:hover{
    background: url(/resources/main/videoThumbnail5.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail6:hover{
    background: url(/resources/main/videoThumbnail6.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail7:hover{
    background: url(/resources/main/videoThumbnail7.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail8:hover{
    background: url(/resources/main/videoThumbnail8.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail9:hover{
    background: url(/resources/main/videoThumbnail9.gif);
    background-size: contain;
    background-image: no-repeat;
}
.thumbnail10:hover{
    background: url(/resources/main/videoThumbnail10.gif);
    background-size: contain;
    background-image: no-repeat;
}

.gridItem img {
    border:hidden;
    border-radius: 50%
}

.channelPicture {
    width:2.4em;
    margin-right: 0.5em;
}

.channelName {
    color:#afafaf;
    font-size: 14px;
    line-height: 19px;
}

.videoTitle {
    font-size: 16px;
    line-height: 22px;
    font-weight:500;
    margin-bottom: 0.2em;
}

.videoDetails {
    display: flex;
    
    max-width: 400px;
}

.shortsTitle {
    display: none ; /* FLEX */
    align-items: center;
    padding-bottom: 1em;
    padding-left: 0.5em;
}

.shortsTitle p {
    font-size: 20px;
    font-weight: bold;
}

.shortsContainer {

    display: grid;

    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows : 1fr;
    overflow-x:hidden;

        /* grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); */

    overflow-x:auto;
    scrollbar-color: transparent transparent;           /*Making my shorts secretly scrollable*/
    scrollbar-gutter: stable;

    align-items: center;

    padding-left : 0.5em ;
    padding-right : 0.5em ;
    margin-bottom: 2.5em;
    gap: 1.1em;


}

.shortsItem {
    display: flex;
    flex-flow: column;
}

.shortsThumbnail img {
    border: hidden;                 
    border-radius: 0.75em;             /*I apply my border to the imae as applying it to the parent div causes it to not be not be rounded on the right on tiny zoom levels */

    object-fit: fill;
    overflow: hidden;

    width: 16.5em;
}

.separator {
    position: relative;                 /* Setting my separator up so my separatorButton can float in the middle of it */
    margin: 3em 0 3em 0;

}

.separator a img {
    width: 1.5em;
}

.separatorButton {
    position: absolute;
    top:-1.4em;
    left: 50%;                          /*Centering horizontally relatively to parent*/
    transform: translateX(-50%);        /*Accounting for the fact that the top left corner is the thing being centered.*/

    display: flex;
    justify-content: center;
    align-items: center;

    border: solid rgb(75, 74, 74) 1px;
    border-radius: 2em;
    padding : 0.5em 9em 0.5em 9em;
    background-color: #0f0f0f;
}

.separatorButton:hover {
    background-color: rgb(75, 74, 74);
}

.separatorButton:active {
    border: solid rgba(255, 255, 255, 0.123) 1px;      /* Using an outline instead of a border prevents the micro-displacement of the header getting bigger because of the adder button border */
    background-color: rgb(85, 85, 85);
}

.strikethroughTop {
    border-bottom: 1px solid transparent;
}

.contentBottom {
    display: flex;
    flex-direction: column;
    align-items: center;
    scale:0.55;                     /* For some reason, using the width parameter on the image breaks the align-items:center... And usign the scale parameter on the image still fills the div with the space it would normally occupy*/
}

.contentBottom img {
    user-select: none;              /* Removing the ability to select that image. */
}

.contentBottom p {
    font-size: 40px;
    font-weight: bold;
}


.map {
    display:flex;
    flex-direction:column;
    align-items: center;
    height: 30em;
    margin-bottom: 10em;
}

.mapTitle {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    margin-bottom: 1em;
}

.map iframe {
    border: solid 1px hidden;
    border-radius: 1em;
}

.refreshButton {
    border: 0.1em solid #303030;
    border-radius: 1.5em;
    
    width: 12em;                                    /* Hard-coding the width so the button won't change height with its contents wrapping */
    padding-top: 0.4em;
    padding-bottom: 0.4em;
    padding-left: 0.6em;
    padding-right: 0.6em;
    margin-top: 1em;
    
    font-size: 30px;
    font-weight: bold;
    color: #3ea6ff;
    background-color: #0f0f0F;
}


.refreshButton:hover {
    background-color: #263850;
}

.refreshButton:active {
    transition: 0.3s ease-in-out;    /* Replicating that light border blink on click */
    border: solid rgba(255, 255, 255, 0.344) 1px;
}
    


/* ***************************************************** """""FOOTER""""" ****************************************************************************** */

.footerSection1 {
    display: flex;
    text-align: start;
    margin-left: 1em;
    font-size: 12px;
    font-weight: bold;
    line-height: 18px;
}

.footerSection1 a {
    color: #aaaaaa;
    /* text-decoration: none; */
    display: flex;
    flex-direction: column;
}

.footerSection2 {
    font-weight: bold;
    font-size: 12px;
    line-height: 18px;

    margin-left: 1em;
    /* Avoiding right margins as it causes nasty text wrap upon hovering over the sidebar and the scroll bar appearing */
    margin-top: 1em;
}

.footerSection2 a {
    color: #aaaaaa;
    /* text-decoration: none; */
    display: flex;
    flex-direction: column;
    white-space: nowrap;
}

.footerSection3 {
    font-weight: bold;

    margin-left: 1em;
    margin-top: 1em;
}

.footerSection3 p {
    color: #717171;
    font-size: 11px;
}

/* ************************************************************* MEDIA QUERIES ***************************************************************************************** */


@media screen and (max-width:425px) {

    .headerSection2 {
        display: none;
    }

    #login2 {
        display:block;
    }

    .aboveBanner {
        top: 7.5em;
        padding-right: 10em;
    }

    .subscribeWrapper {
        margin-top: 0.5em;
    }

    /* .thumbnail {
        width: calc(720px/3.6);
        height: calc(404px/3.6);
    }

    .gridItem {
    max-width:calc(720px/3.6);
    }

    .gridContainer {
    grid-template-columns: repeat(auto-fit, minmax(calc(720px / 3.6), 1fr) );
    } */

    .shortsTitle {
        display:flex;
    }

}

@media screen and (min-width:425px) {

    #kabobButton {
        display: block;
    }

    #login2 {
        display:block;
    }

    .shortsTitle {
        display:flex;
    }


}

@media screen and (min-width: 600px) {

    #SearchImage2 {
        display: none;
    }
    
    .searchContainer {
        display:flex;
    }

    .searchButton {
        display: flex;
    }

    #searchBar {
        max-width: 200px;
    }

    .strikethroughTop {
        border-bottom: solid rgb(75, 74, 74) 1px;
    }
    
    .shortsTitle {
        display:none;
    }

}


/* I elected to use (min-width:) as (max-width:) would require me to nullify my mainContent's margins. Setting the margins to 0 within (max-width:) bore no results...*/
@media screen and (min-width:800px) { /* Min-wodth What is beaing done at more than 800px */

    #compactSidebar {
        display: flex;
    }

    #mainContent {
        padding-left: 5em;      /*Only use padding here. Using margins here will cause a horizontal scroll because the sidebar already occupies about 10% of the 100% width that was hardcoded to mainContent */
        padding-right: 1em;
    }

    #searchBar {
        max-width: none;
    }

    #login2 {
        display: none;
    }

    #login1 {
        display: block;
    }

}

/* @media all and (max-width:800px) s'adapte Ã  tous les Ã©crans plus petits que 800px */